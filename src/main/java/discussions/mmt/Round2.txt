hi Rahul

we are given certain intervals, given in the form of the starting value and ending value of the interval
eg. [1, 4], [2, 5], [4, 7]..
given these intervals, we have to find the maximum number of intervals overlapping anywhere
4 -> 3
1  2  3  4
   2  3  4  5
         4  5  6  7


         [1, 4], [2, 5], [4, 7].. [8,10][11,13][12,14]

        [1,5][4,7]
         [1, 7] -3
         [11,13]



         [1, 6], [4, 10], [8, 12]
         [1, 10], [8, 12]

         1 2 3 4  5  6  7
         1 1 0 1 -1 -1  0
         1 2 2 3  2  1  1

         1 - 1
         2 - 1
         4 - 1
         5 - -1
         6 - -1
         8 - -1




we have a list of lists
eg.
[1 , 3, 5]
[2, 3, 6, 7]
[3, 5]

we want to get all the lists, such that in each of the output lists, the 1st element if fromthe 1st input list, the 2nd element is from the 2nd input list and so on.

[1, 2, 3]
[1, 6, 5]
[3, 3, 3]




public List<List<Integer>> method(List<List<Integer>> lists) {
  List<List<Integer>> sol = new ArrayList<>();
  util(lists, 0, sol, new ArrayList<>(), lists.size());
  return sol;
}

public void util(List<List<Integer>> lists, int i,  List<List<Integer>> sol, List<Integer> current, int n) {
  if(i==n) {
    sol.add(new ArrayList<>(current);
            return;
  }
            for(int k=0;k<lists.get(i).size();k++) {
    			current.add(lists.get(i).get(k);
                    util(lists, i+1, sol, current, n);
     			current.remove(current.size()-1);
    		}

}
